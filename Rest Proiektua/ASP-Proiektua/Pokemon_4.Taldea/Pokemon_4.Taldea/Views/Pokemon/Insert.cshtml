@model Pokemon_4.Taldea.Models.Pokemon

@{
    ViewBag.Title = "InsertPokemon";
}

<h2>InsertPokemon</h2>


@using (Html.BeginForm("Create", "Pokemon"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="margin-top:10%;">
    <h4>Pokemon</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                String[] typeList = { "Bug", "Dragon", "Electric", "Fighting", "Fire", "Flying", "Ghost", "Grass", "Ground", "Ice", "Normal", "Poison", "Psychic", "Rock", "Water", "Fairy", "Dark", "Steel" };
                int count = 0;
                foreach (var type in typeList)
                {
                    count++;
                    var irudia = type + ".png";
                    <input type="checkbox" id="@type" name="type" value="@type" onclick="return ValidateTypeSelection();">
                    <img class="typeIrudia" src="@Url.Content("~/Irudiak/tipos/"+irudia)">
                    if (count % 5 == 0)
                    {
                        <br />
                    }
                }
            }
        </div>
        <script type="text/javascript">
            function ValidateTypeSelection() {
                var checkboxes = document.getElementsByName("type");
                var numberOfCheckedItems = 0;
                for (var i = 0; i < checkboxes.length; i++) {
                    if (checkboxes[i].checked)
                        numberOfCheckedItems++;
                }
                if (numberOfCheckedItems > 2) {
                    alert("You can't select more than two types!");
                    return false;
                }
            }
        </script>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.height, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.height, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.height, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.weight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.weight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.weaknesses, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                count=0;
                foreach (var type in typeList)
                {
                    count++;
                    var irudia = type + ".png";
                    <input type="checkbox" id="@type" name="weakness" value="@type">
                    <img class="typeIrudia" src="@Url.Content("~/Irudiak/tipos/"+irudia)">
                    if (count % 5 == 0)
                    {
                        <br />
                    }
                }
            }
        </div>
       </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
